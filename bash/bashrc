if-found() {
  local cmd=$1
  which ${cmd} 1>&2 > /dev/null
  return $?
}

export LANG="en_US.UTF-8"
export VISUAL=vim
if if-found nvim; then
  export VISUAL=nvim
  alias vim=nvim
  alias vi=nvim
fi
export EDITOR="$VISUAL"


# Disable ctrl-s/ctrl-q
case $(tty) in /dev/tty[0-9]*)
  stty -ixon;;
esac

# Better history management
export HISTCONTROL=ignoreboth:erasedups
export HISTSIZE=50000
export HISTIGNORE="ls:ll"
shopt -s histappend

# Colors
export CLICOLOR=1
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_DESCRIBE_STYLE=tag
#export GIT_PS1_SHOWUPSTREAM=auto
export GIT_PS1_SHOWCOLORHINTS=true
export GIT_PS1_DIRTYMARKER=âœ—

# Run tests in parallel by default with ctest
export CTEST_PARALLEL_LEVEL=$(nproc)

# Load auto-completion (and possibly __git_ps1)
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

fuzzy_replace_filedir_xspec
fuzzy_setup_for_command cd

PROMPT_COMMAND=__prompt_command
__prompt_command() {
  local exit_code=$?

  local red="\[$(tput setaf 1)\]"
  local green="\[$(tput setaf 2)\]"
  local white="\[$(tput setaf 15)\]"
  local reset="\[$(tput sgr0)\]"
  local bold="\[$(tput bold)\]"

  local prefix="${bold}${white}\h:$(basename $PWD)/${reset}"

  local git_status=""
  if [ -n "$(type -t __git_ps1)" ]; then
    git_status=$(__git_ps1)
  fi

  # sets last character to a fat red '!' if previous command failed.
  local prev_status="\$"
  if [[ $exit_code != 0 ]]; then
    prev_status="${bold}${red}!${reset}"
  fi

  PS1="${prefix}${git_status} ${prev_status} "
}

# set paths
for p in ~/.local/bin ~/.bin ~/.cargo/bin /usr/local/go/bin ~/go/bin; do
  if [ -d "$p" ]; then
    case ":$PATH:" in
      *"$p:"*) :;; # do nothing
      *) PATH="$p:$PATH";;
    esac
  fi
done

GNOME_KEYRING_AGENT_SOCKET=/run/user/$(id -u)/keyring/ssh
if test -S ${GNOME_KEYRING_AGENT_SOCKET}; then
  export SSH_AUTH_SOCK=${GNOME_KEYRING_AGENT_SOCKET}
fi

source_if_exists() {
  local file=$1
  [ -f "$file" ] && source "$file"
}

INCLUDES=(
 ~/.fzf.bash
 ~/miniconda/etc/profile.d/conda.sh
 /usr/share/bash-completion/completions/git
)

for f in "${INCLUDES[@]}"; do
  source_if_exists "$f"
done

if declare -F __git_complete &> /dev/null; then
  __git_complete g _git
  __git_complete gs _git_status
  __git_complete gd _git_diff
  __git_complete ga _git_add
  __git_complete gp _git_pull
  __git_complete gk _git_checkout
  __git_complete gc _git_commit
  __git_complete gb _git_branch
  __git_complete gm _git_merge
  __git_complete gf _git_fetch
  __git_complete gr _git_rebase
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# fd respects .gitignore
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_DEFAULT_OPTS="--preview 'bat --color=always --line-range :100 {}'"
export FZF_TMUX_HEIGHT="60%"



if if-found exa; then
  alias ls=exa
fi

if if-found bat; then
  alias cat=bat
fi

alias ll="ls -alh"

tmux-arrow() {
  # run vim under bash such that proper initialization is done, notably
  # disabling SIGSTOP via stty
  local command="bash -c 'nvim'"
  tmux new-session -DAs arrow -c ~/src/db/arrow -n vim "${command}"
}

# git aliases
alias g=git
alias gs="git status"
alias gd="git diff"
alias ga="git add -p"
alias gp="git pull"
alias gk="git checkout"
alias gc="git commit"
alias gb="git branch"
alias gm="git merge"
alias gf="git fetch"
alias gr="git rebase"
