#!/usr/bin/env bash

# adapted from https://gitlab.com/silent.correspondent/commit-msg

filename="$1"
lineno=0

stopper="# ------------------------ >8 ------------------------"

error() {
    echo "An error was detected in your commit message:"
    echo ""
    echo "$1"
    echo ""
    local commit_fd; commit_fd=$(mktemp "/tmp/git-commit-msg.XXXXXXXX")
    cp $filename $commit_fd
    echo "You can run the following command if you want to edit again."
    echo ""
    echo "git commit -e -t /dev/null -F $commit_fd ; rm $commit_fd"
    echo ""
    echo "Or if you like to skip this hook verification."
    echo ""
    echo "git commit -e -n -t /dev/null -F $commit_fd ; rm $commit_fd"
    exit 1
}

while read -r line
do
    # Stop validating at STOPPER (diff)
    [[ "$line" == "$STOPPER" ]] && break
    # Ignore comment lines (don't count line number either)
    [[ "$line" =~ ^#.* ]] && continue
    let lineno+=1
    length=${#line}
    # Subject line tests
    if [[ $lineno -eq 1 ]]; then
        [[ $length -gt 50 ]] && error "Limit the subject line to 50 characters"
        [[ ! "$line" =~ ^[A-Z] ]] && error "Capitalise the subject line"
        [[ "$line" == *. ]] && error "Do not end the subject line with a period"
    fi
    # Rules related to the commit message body
    [[ $lineno -eq 2 ]] && [[ -n $line ]] && error "Separate subject from body with a blank line"
    [[ $lineno -gt 1 ]] && [[ $length -gt 72 ]] && error "Wrap the body at 72 characters. The offending line ($lineno) is\n\n$line"
done < "$filename"
exit 0
